# 使用 Ubuntu 作为基础镜像以避免 Alpine 的 OpenSSL 兼容性问题
FROM node:18-bullseye-slim AS builder

WORKDIR /app

# 复制package文件
COPY package*.json ./
COPY prisma ./prisma/

# 安装所有依赖
RUN npm ci

# 生成Prisma客户端
RUN npx prisma generate

# 复制源代码
COPY . .

# 构建应用
RUN npm run build

# 运行阶段 - 也使用 Ubuntu 以确保兼容性
FROM node:18-bullseye-slim

WORKDIR /app

# 安装必要的运行时依赖
RUN apt-get update && apt-get install -y \
    openssl \
    && rm -rf /var/lib/apt/lists/*

# 从构建阶段复制所有node_modules（包括生产和开发依赖）
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/prisma ./prisma

# 复制package.json
COPY package*.json ./

# 复制其他必要文件
COPY healthcheck.js ./

# 创建必要的目录
RUN mkdir -p uploads temp logs public

# 暴露端口
EXPOSE 3000

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node healthcheck.js

# 启动应用
CMD ["npm", "run", "start:prod"]